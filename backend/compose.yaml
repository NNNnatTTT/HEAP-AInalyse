services:
  kong-config-generator:
    image: alpine:latest
    volumes:
      - ./kong/config:/config
      - ./kong.yml.template:/kong.yml.template
    environment:
      - AUTH_SERVICE_URL=${AUTH_SERVICE_URL}
      - OPEN_ROUTER_WRAPPER_SERVICE_URL=${OPEN_ROUTER_WRAPPER_SERVICE_URL}
      - REVIEW_SERVICE_URL=${REVIEW_SERVICE_URL}
      - SCANNER_SERVICE_URL=${SCANNER_SERVICE_URL}
      - SUGGESTION_SERVICE_URL=${SUGGESTION_SERVICE_URL}
      - SUGGESTION_HISTORY_SERVICE_URL=${SUGGESTION_HISTORY_SERVICE_URL}
      - UPLOAD_SERVICE_URL=${UPLOAD_SERVICE_URL}
      - ANALYSE_RESULTS_SERVICE_URL=${ANALYSE_RESULTS_SERVICE_URL}
      - COMPARE_SERVICE_URL=${COMPARE_SERVICE_URL}
      - AI_MODEL_SERVICE_URL=${AI_MODEL_SERVICE_URL}
      - DOCUMENT_STORAGE_SERVICE_URL=${DOCUMENT_STORAGE_SERVICE_URL}
      - KONG_JWT_CONSUMER_USERNAME=${KONG_JWT_CONSUMER_USERNAME}
      - KONG_JWT_KEY=${KONG_JWT_KEY}
      - KONG_JWT_ALGORITHM=${KONG_JWT_ALGORITHM}
      - KONG_JWT_SECRET=${KONG_JWT_SECRET}
    command: >
      sh -c "
        apk add --no-cache gettext &&
        envsubst < /kong.yml.template > /config/kong.yml &&
        echo 'Kong configuration generated successfully!'
      "

  kong:
    image: kong:latest
    container_name: kong
    restart: always
    depends_on:
      - kong-config-generator
    ports:
      - "8000:8000" # Proxy port
      - "8001:8001" # Admin API port
      - "8443:8443" # Proxy HTTPS port
      - "8444:8444" # Admin API HTTPS port
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: "config/kong.yml"
      KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
      KONG_JWT_SECRET: ${JWT_SECRET}
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_KEY: ${SUPABASE_KEY}
    volumes:
      - ./kong/config:/config

  auth:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    ports:
      - "5001:5001"
    environment:
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_KEY: ${SUPABASE_KEY}
      JWT_SECRET: ${JWT_SECRET}

  # open-router-wrapper:
  #   build:
  #     context: ./open-router-wrapper
  #     dockerfile: Dockerfile
  #   container_name: open-router-wrapper
  #   ports:
  #     - "5002:5002"
  #   environment:
  #     SUPABASE_URL: ${SUPABASE_URL}
  #     SUPABASE_KEY: ${SUPABASE_KEY}

  review-service:
    build:
      context: ./review-service
      dockerfile: Dockerfile
    container_name: review-service
    ports:
      - "5003:5003"
    environment:
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_KEY: ${SUPABASE_KEY}
      ANALYZE_RESULTS_URL: ${ANALYZE_RESULTS_URL}

  scanner:
    build:
      context: ./scanner
      dockerfile: Dockerfile
    container_name: scanner
    ports:
      - "5004:5004"
    environment:
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_KEY: ${SUPABASE_KEY}

  suggestion-service:
    build:
      context: ./suggestion-service
      dockerfile: Dockerfile
    container_name: suggestion-service
    ports:
      - "5005:5005"
    environment:
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_KEY: ${SUPABASE_KEY}

  # suggestion-history:
  #   build:
  #     context: ./suggestion-history
  #     dockerfile: Dockerfile
  #   container_name: suggestion-history
  #   ports:
  #     - "5006:5006"
  #   environment:
  #     SUPABASE_URL: ${SUPABASE_URL}
  #     SUPABASE_KEY: ${SUPABASE_KEY}

  upload-service:
    build:
      context: ./upload-service
      dockerfile: Dockerfile
    container_name: upload-service
    ports:
      - "5007:5007"
    environment:
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_KEY: ${SUPABASE_KEY}

  analyse-results:
    build:
      context: ./analyse-results
      dockerfile: Dockerfile
    container_name: analyse-results
    ports:
      - "5008:5008"
    environment:
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_KEY: ${SUPABASE_KEY}

  compare-service:
    build:
      context: ./compare-service
      dockerfile: Dockerfile
    container_name: compare-service
    ports:
      - "5010:5010"
    environment:
      AI_MODEL_URL: ${AI_MODEL_URL}
      SCANNER_URL: ${SCANNER_URL}
    depends_on:
      - scanner
      - ai-model

  ai-model:
    build:
      context: ./ai-model
      dockerfile: Dockerfile
    container_name: ai-model             
    ports:                               
      - "5020:5020"
    environment:
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - OPENROUTER_MODEL=${OPENROUTER_MODEL}

  document-storage-service:
    build:
      context: ./document-storage-service
      dockerfile: Dockerfile
    container_name: document-storage-service
    ports:
      - "5009:5009"
    environment:
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_KEY: ${SUPABASE_KEY}
